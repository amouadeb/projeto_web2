<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Criar Evento - Sistema de Eventos</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8f9fa;
            min-height: 100vh;
        }

        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .navbar h1 {
            font-size: 1.5rem;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .navbar a:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .header h2 {
            color: #333;
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .header p {
            color: #666;
            font-size: 1.1rem;
        }

        .form-container {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #333;
            font-size: 1rem;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 120px;
        }

        .btn {
            padding: 14px 28px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid #e9ecef;
        }

        .preview-section {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 1.5rem;
            margin-top: 2rem;
            border-left: 4px solid #667eea;
        }

        .preview-section h3 {
            color: #333;
            margin-bottom: 1rem;
        }

        .preview-item {
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }

        .preview-label {
            font-weight: 600;
            color: #667eea;
        }

        /* Estilos para o alerta de sucesso */
        .success-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        }

        .success-alert.show {
            transform: translateX(0);
        }

        .success-alert .icon {
            font-size: 1.2rem;
        }

        .success-alert .message {
            font-weight: 600;
        }

        .error-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        }

        .error-alert.show {
            transform: translateX(0);
        }

        .error-alert .icon {
            font-size: 1.2rem;
        }

        .error-alert .message {
            font-weight: 600;
        }

        @media (max-width: 768px) {
            .form-actions {
                flex-direction: column;
            }
            .container {
                padding: 1rem;
            }
            .success-alert,
            .error-alert {
                right: 10px;
                left: 10px;
                transform: translateY(-100px);
            }
            .success-alert.show,
            .error-alert.show {
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <h1>Sistema de Eventos</h1>
        <a href="dashboard">‚Üê Voltar</a>
    </nav>

    <div class="container">
        <div class="header">
            <h2>Criar Novo Evento</h2>
            <p>Preencha as informa√ß√µes essenciais</p>
        </div>

        <div class="form-container">
            <form id="eventForm">
                <!-- T√çTULO -->
                <div class="form-group">
                    <label for="titulo">T√≠tulo do Evento <span class="required">*</span></label>
                    <input type="text" id="titulo" name="titulo" required maxlength="100" oninput="updatePreview()">
                </div>

                <!-- DESCRI√á√ÉO -->
                <div class="form-group">
                    <label for="descricao">Descri√ß√£o</label>
                    <textarea id="descricao" name="descricao" oninput="updatePreview()"></textarea>
                </div>

                <!-- LOCAL -->
                <div class="form-group">
                    <label for="local">Local do Evento <span class="required">*</span></label>
                    <input type="text" id="local" name="local" required maxlength="100" oninput="updatePreview()">
                </div>

                <!-- DATA -->
                <div class="form-group">
                    <label for="data">Data do Evento <span class="required">*</span></label>
                    <input type="date" id="data" name="data" required onchange="updatePreview()">
                </div>

                <!-- STATUS -->
                <div class="form-group">
                    <label for="status">Status Inicial</label>
                    <select id="status" name="status" onchange="updatePreview()">
                        <option value="agendado">agendado</option>
                        <option value="aberto">aberto</option>
                        <option value="fechado">fechado</option>
                        <option value="aguardando">aguardando</option>
                    </select>
                </div>

                <!-- PR√â-VISUALIZA√á√ÉO SIMPLIFICADA -->
                <div class="preview-section">
                    <h3>üîç Pr√©-visualiza√ß√£o</h3>
                    <div class="preview-item"><span class="preview-label">T√≠tulo:</span> <span id="preview-titulo">-</span></div>
                    <div class="preview-item"><span class="preview-label">Data:</span> <span id="preview-data">-</span></div>
                    <div class="preview-item"><span class="preview-label">Local:</span> <span id="preview-local">-</span></div>
                    <div class="preview-item"><span class="preview-label">Status:</span> <span id="preview-status">-</span></div>
                    <div class="preview-item"><span class="preview-label">Descri√ß√£o:</span> <span id="preview-descricao">-</span></div>
                </div>

                <!-- A√á√ïES -->
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="resetForm()">Limpar</button>
                    <button type="submit" class="btn btn-primary">Criar Evento</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function updatePreview() {
            const titulo = document.getElementById('titulo').value || '-';
            const data = document.getElementById('data').value;
            const local = document.getElementById('local').value || '-';
            const status = document.getElementById('status').value || 'Agendado';
            const descricao = document.getElementById('descricao').value || '-';

            document.getElementById('preview-titulo').textContent = titulo;
            document.getElementById('preview-local').textContent = local;
            document.getElementById('preview-status').textContent = status.charAt(0).toUpperCase() + status.slice(1);
            document.getElementById('preview-descricao').textContent = descricao.length > 100 ? descricao.substring(0, 100) + '...' : descricao;

            let dataFormatada = '-';
            if (data) {
                const d = new Date(data + 'T00:00:00');
                dataFormatada = d.toLocaleDateString('pt-BR');
            }
            document.getElementById('preview-data').textContent = dataFormatada;
        }

        function resetForm() {
            if (confirm('Limpar todos os campos?')) {
                document.getElementById('eventForm').reset();
                updatePreview();
            }
        }

        function showAlert(message, type = 'success') {
            const alertDiv = document.createElement('div');
            alertDiv.className = type === 'success' ? 'success-alert' : 'error-alert';
            
            const icon = type === 'success' ? '‚úÖ' : '‚ùå';
            alertDiv.innerHTML = `
                <span class="icon">${icon}</span>
                <span class="message">${message}</span>
            `;
            
            document.body.appendChild(alertDiv);
            
          
            setTimeout(() => {
                alertDiv.classList.add('show');
            }, 100);
            
           
            setTimeout(() => {
                alertDiv.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(alertDiv);
                }, 300);
            }, 3000);
        }

        document.getElementById('eventForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const titulo = document.getElementById('titulo').value.trim();
            const data = document.getElementById('data').value;
            const local = document.getElementById('local').value.trim();
            
            if (!titulo || !data || !local) {
                showAlert('Preencha todos os campos obrigat√≥rios.', 'error');
                return;
            }

            const eventDate = new Date(data + 'T00:00:00');
            const now = new Date();
            if (eventDate <= now) {
                showAlert('A data deve ser futura.', 'error');
                return;
            }

            const formData = new FormData(this);
            const eventData = {};
            for (let [key, value] of formData.entries()) {
                eventData[key] = value;
            }

            
            fetch('http://localhost:3000/api/eventos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(eventData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao criar evento');
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
               
                showAlert('Evento criado com sucesso!', 'success');
                
                
                setTimeout(() => {
                    window.location.href = 'dashboard';
                }, 2000);
            })
            .catch(error => {
                console.error(error);
                showAlert('Erro ao criar evento. Tente novamente.', 'error');
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('data').min = today;
            updatePreview();
        });
    </script>
</body>
</html>